import React from 'react';\nimport TodoItem from './TodoItem';\nimport { Todo, TodoFormData } from '../types/Todo';\nimport './TodoList.css';\n\ninterface TodoListProps {\n  todos: Todo[];\n  loading: boolean;\n  onToggle: (id: string) => Promise<void>;\n  onUpdate: (id: string, todoData: Partial<TodoFormData>) => Promise<void>;\n  onDelete: (id: string) => Promise<void>;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({\n  todos,\n  loading,\n  onToggle,\n  onUpdate,\n  onDelete\n}) => {\n  if (loading) {\n    return (\n      <div className=\"todo-list\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>할 일 목록을 불러오는 중...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (todos.length === 0) {\n    return (\n      <div className=\"todo-list\">\n        <div className=\"empty-state\">\n          <div className=\"empty-icon\">📝</div>\n          <h3>아직 할 일이 없습니다</h3>\n          <p>새로운 할 일을 추가해보세요!</p>\n        </div>\n      </div>\n    );\n  }\n\n  const completedTodos = todos.filter(todo => todo.completed);\n  const pendingTodos = todos.filter(todo => !todo.completed);\n\n  return (\n    <div className=\"todo-list\">\n      <div className=\"todo-list-header\">\n        <h2>할 일 목록</h2>\n        <div className=\"todo-count\">\n          <span className=\"pending-count\">\n            미완료: {pendingTodos.length}\n          </span>\n          <span className=\"completed-count\">\n            완료: {completedTodos.length}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"todo-sections\">\n        {/* 미완료 할 일 */}\n        {pendingTodos.length > 0 && (\n          <div className=\"todo-section\">\n            <h3 className=\"section-title pending-title\">\n              🔄 진행 중 ({pendingTodos.length})\n            </h3>\n            <div className=\"todo-items\">\n              {pendingTodos.map((todo) => (\n                <TodoItem\n                  key={todo._id}\n                  todo={todo}\n                  onToggle={onToggle}\n                  onUpdate={onUpdate}\n                  onDelete={onDelete}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* 완료된 할 일 */}\n        {completedTodos.length > 0 && (\n          <div className=\"todo-section completed-section\">\n            <h3 className=\"section-title completed-title\">\n              ✅ 완료됨 ({completedTodos.length})\n            </h3>\n            <div className=\"todo-items\">\n              {completedTodos.map((todo) => (\n                <TodoItem\n                  key={todo._id}\n                  todo={todo}\n                  onToggle={onToggle}\n                  onUpdate={onUpdate}\n                  onDelete={onDelete}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;